<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

  <!--声明，注册springmvc的核心对象DispatcherServlet
  需要在tomcat服务器启动后，创建DispatcherServlet对象的实例
  为什么要创建DispatcherServlet对象实例呢？
  因为DispatcherServlet在创建过程中，会创建springmvc对象
  读取springmvc配置文件，创建该配置文件中的对象，就可以直接使用了

  -->
  <servlet>
    <servlet-name>myweb</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--
    tomcat启动后，创建servlet对象
    load-on-startup:启动tomcat后创建对象的数据，值为整数，越小创建对象的时间越早，一般
    为大于等于0的整数
    -->
    <!--springmvc的配置文件的位置属性
    -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:conf/springmvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>myweb</servlet-name>
    <!--
    使用框架的时候，url-pattern可以使用两种值
    1.使用扩展名方法，语法*.xxx,xxx自定义扩展名，常用*.do,*.action,*.mvc等等
    2.使用"/"
    -->
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>


  <!--spring监听器-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:conf/applicationContext.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!--注册声明过滤器，解决post中文乱码-->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
    <!--强制请求对象使用encoding编码的值-->
    <init-param>
      <param-name>forceRequestEncoding</param-name>
      <param-value>true</param-value>
    </init-param>

    <!--强制应答对象使用encoding编码的值-->
    <init-param>
      <param-name>forceResponseEncoding</param-name>
      <param-value>true</param-value>
    </init-param>


  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <!--/*表示强制所有请求先通过过滤器处理-->
    <url-pattern>/*</url-pattern>
  </filter-mapping>
</web-app>